services:
  nginx:
    container_name: nginx
    image: nginxproxy/nginx-proxy
    restart: unless-stopped
    ports:
        - 80:80
        - 443:443
    volumes:
        - /var/run/docker.sock:/tmp/docker.sock:ro
        - /var/docker/nginx/html:/usr/share/nginx/html
        - /var/docker/nginx/certs:/etc/nginx/certs
        - /var/docker/nginx/vhost:/etc/nginx/vhost.d
        - /var/docker/nginx/conf:/etc/nginx/conf.d
    logging:
        options:
            max-size: "10m"
            max-file: "3"
  letsencrypt-companion:
    container_name: letsencrypt-companion
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: unless-stopped
    volumes_from:
        - nginx
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - /var/docker/nginx/acme:/etc/acme.sh
    environment:
        DEFAULT_EMAIL: ${DEFAULT_EMAIL}
  mariadb:
    image: mariadb:10.11
    command: --max-allowed-packet=64MB
    restart: always
    volumes:
      - mariadb:/var/lib/mysql:Z
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MARIADB_AUTO_UPGRADE=1
      - MARIADB_DISABLE_UPGRADE_BACKUP=1  
  miniflux:
    image: miniflux/miniflux:latest
    ports:
      - "8085:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://miniflux:${FRESHRSS_MYSQL_PASSWORD}@postgres/miniflux?sslmode=disable
      - RUN_MIGRATIONS=1
      - CREATE_ADMIN=1
      - ADMIN_USERNAME=${FRESHRSS_USER}
      - ADMIN_PASSWORD=${FRESHRSS_PASSWORD}
      - VIRTUAL_HOST=reader.lifeofpablo.com
      - LETSENCRYPT_HOST=reader.lifeofpablo.com
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=miniflux
      - POSTGRES_PASSWORD=${FRESHRSS_MYSQL_PASSWORD}
      - POSTGRES_DB=miniflux
    volumes:
      - miniflux-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "miniflux"]
      interval: 10s
      start_period: 30s
  vp-proxy-miniflux:
    image: nginx:latest
    container_name: vp-proxy-miniflux
    volumes:
      - ./nginx-proxy/miniflux:/etc/nginx/conf.d
    ports:
      - 8112:80
  vouch-proxy:
    container_name: vp-lifeofpablo
    image: quay.io/vouch/vouch-proxy
    ports:
      - 9090:9090
    volumes:
      - ./vouch-proxy-config:/config
    restart: always
    environment:
      VIRTUAL_HOST: auth.lifeofpablo.com
      LETSENCRYPT_HOST: auth.lifeofpablo.com
  thelounge:
    image: ghcr.io/thelounge/thelounge:latest
    container_name: thelounge
    ports:
      - "9524:9000"
    restart: always
    volumes:
      - ./thelounge:/var/opt/thelounge # bind lounge config from the host's file syste
    environment:
      - VIRTUAL_HOST=chat.lifeofpablo.com
      - LETSENCRYPT_HOST=chat.lifeofpablo.com
  korea:
    container_name: korea
    restart: unless-stopped 
    build:
      dockerfile: ./korea.lifeofpablo.com/Dockerfile  
    volumes:
      #Project root
      - ./korea.lifeofpablo.com/www/korea.lifeofpablo.com:/var/www/html
    ports:
      - "8090:80"
    environment:
      - VIRTUAL_HOST=korea.lifeofpablo.com
      - LETSENCRYPT_HOST=korea.lifeofpablo.com
  lifeofpablo-proxy:
    image: nginx:latest
    container_name: vp-proxy-miniflux
    volumes:
      - ./nginx-proxy/lifeofpablo:/etc/nginx/conf.d
    ports:
      - 8110:80
  lifeofpablo:
    container_name: lifeofpablo
    restart: unless-stopped 
    build:
      dockerfile: ./lifeofpablo.com/Dockerfile  
    volumes:
      #Project root
      - ./lifeofpablo.com/www/lifeofpablo.com:/var/www/html
    ports:
      - "8080:80"
    environment:
      - VIRTUAL_HOST=lifeofpablo.com
      - LETSENCRYPT_HOST=lifeofpablo.com
  lifeofpablo-guestbook:
    container_name: lifeofpablo-guestbook
    restart: unless-stopped 
    build:
      dockerfile: ./lifeofpablo-guestbook/Dockerfile  
    volumes:
      #Project root
      - ./lifeofpablo-guestbook/www/guestbook:/var/www/html
    ports:
      - "8081:80"
  lifeofpablo-linkinbio:
    container_name: lifeofpablo-linkinbio
    restart: unless-stopped 
    build:
      dockerfile: ./lifeofpablo-guestbook/Dockerfile  
    volumes:
      #Project root
      - ./lifeofpablo-guestbook/www/guestbook:/var/www/html
    ports:
      - "8082:80"
  lifeofpablo-now:
    container_name: lifeofpablo-now
    image: ghcr.io/pmoralesgarcia/now:latest
    restart: unless-stopped
    ports:
      - "8083:80"
volumes:
 mariadb:
 miniflux-db:
