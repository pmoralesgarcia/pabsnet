services:
  nginx:
    container_name: nginx
    image: nginxproxy/nginx-proxy
    restart: unless-stopped
    ports:
        - 80:80
        - 443:443
    volumes:
        - /var/run/docker.sock:/tmp/docker.sock:ro
        - /var/docker/nginx/html:/usr/share/nginx/html
        - /var/docker/nginx/certs:/etc/nginx/certs
        - /var/docker/nginx/vhost:/etc/nginx/vhost.d
        - /var/docker/nginx/conf:/etc/nginx/conf.d
    logging:
        options:
            max-size: "10m"
            max-file: "3"
  letsencrypt-companion:
    container_name: letsencrypt-companion
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: unless-stopped
    volumes_from:
        - nginx
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - /var/docker/nginx/acme:/etc/acme.sh
    environment:
        DEFAULT_EMAIL: ${DEFAULT_EMAIL}
#  lifeofpablo:
#    container_name: lifeofpablo-com
#    ports:
#      - 8081:80
#    build:
#      context: ./lifeofpablo.com
#      dockerfile: Dockerfile
#    volumes:
#      - ./lifeofpablo.com/www/lifeofpablo.com:/var/www/lifeofpablo.com
#    environment:
#      VIRTUAL_HOST: lifeofpablo.com
#     # LETSENCRYPT_HOST: lifeofpablo.com
  bludit:
    container_name: pablospicassos
    image: bludit/docker:3.13.1
    ports:
      - 8098:80
    volumes:
      - bludit:/home/pablo/bludit:/usr/share/nginx/html/bl-content
    restart: always
    environment:
      VIRTUAL_HOST: picassos.lifeofpablo.com
      LETSENCRYPT_HOST: picassos.lifeofpablo.com
  lifeofpablo-now:
    image: ghcr.io/pmoralesgarcia/now:latest
    ports:
      - 8086:80
    restart: always
  mariadb:
    image: mariadb:10.11
    command: --max-allowed-packet=64MB
    restart: always
    volumes:
      - mariadb:/var/lib/mysql:Z
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MARIADB_AUTO_UPGRADE=1
      - MARIADB_DISABLE_UPGRADE_BACKUP=1  
  miniflux:
    image: miniflux/miniflux:latest
    ports:
      - "8085:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://miniflux:${FRESHRSS_MYSQL_PASSWORD}@postgres/miniflux?sslmode=disable
      - RUN_MIGRATIONS=1
      - CREATE_ADMIN=1
      - ADMIN_USERNAME=${FRESHRSS_USER}
      - ADMIN_PASSWORD=${FRESHRSS_PASSWORD}
  umami:
    image: ghcr.io/umami-software/umami:postgresql-latest
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgresql://umami:${FRESHRSS_MYSQL_PASSWORD}@postgres-unami:5432/umami
      DATABASE_TYPE: postgresql
      APP_SECRET: ${FRESHRSS_API_PASSWORD}
      VIRTUAL_HOST: stats.lifeofpablo.com
      LETSENCRYPT_HOST: stats.lifeofpablo.com
    depends_on:
      postgres-unami:
        condition: service_healthy
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:3000/api/heartbeat"]
      interval: 5s
      timeout: 5s
      retries: 5
  postgres-unami:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: umami
      POSTGRES_USER: umami
      POSTGRES_PASSWORD: ${FRESHRSS_MYSQL_PASSWORD}
    volumes:
      - umami-db-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=miniflux
      - POSTGRES_PASSWORD=${FRESHRSS_MYSQL_PASSWORD}
      - POSTGRES_DB=miniflux
    volumes:
      - miniflux-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "miniflux"]
      interval: 10s
      start_period: 30s
  vp-proxy-miniflux:
    image: nginx:latest
    container_name: vp-proxy-miniflux
    volumes:
      - ./nginx-proxy/miniflux:/etc/nginx/conf.d
    ports:
      - 8112:80
    environment:
      VIRTUAL_HOST: reader.lifeofpablo.com
      LETSENCRYPT_HOST: reader.lifeofpablo.com
  vouch-proxy:
    container_name: vp-lifeofpablo
    image: quay.io/vouch/vouch-proxy
    ports:
      - 9090:9090
    volumes:
      - ./vouch-proxy-config:/config
    restart: always
    environment:
      VIRTUAL_HOST: auth.lifeofpablo.com
      LETSENCRYPT_HOST: auth.lifeofpablo.com
volumes:
 bludit:
 mariadb:
 miniflux-db:
 umami-db-data: